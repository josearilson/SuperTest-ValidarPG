{
  "stats": {
    "suites": 7,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-26T15:12:13.295Z",
    "end": "2022-10-26T15:12:26.790Z",
    "duration": 13495,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d8f2f229-3973-4fdb-aa15-5d365f85e91b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7a782cde-c625-4417-bfde-4e54cd60f178",
          "title": "POST - Gerar Access Token",
          "fullFile": "C:\\Users\\jose.ramalho\\Desktop\\SuperTest\\test\\01 - GerarAcessToken.spec.js",
          "file": "\\test\\01 - GerarAcessToken.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "testes",
              "fullTitle": "POST - Gerar Access Token testes",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n    .post('/api/Login')\n    .send(credencial)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .expect(200)\n    .end((err, res) => {\n        if (err) return done(err);\n        transactionId = res.body.transactionId\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body).not.to.be.null;\n        envVariables.token = res.body.tokenSessao;\n        fs.writeFileSync(\"env.json\", JSON.stringify(envVariables));\n    \n    });\n    done();",
              "err": {},
              "uuid": "66d2f878-20d3-480c-ba74-fd1ec793cf65",
              "parentUUID": "7a782cde-c625-4417-bfde-4e54cd60f178",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66d2f878-20d3-480c-ba74-fd1ec793cf65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a93338f1-284e-4dcd-9a5a-5d23fb685e63",
          "title": "POST - Realizada Autorização de Pagamento",
          "fullFile": "C:\\Users\\jose.ramalho\\Desktop\\SuperTest\\test\\02 - postsGerarTransacao.js",
          "file": "\\test\\02 - postsGerarTransacao.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CT01 - Gerar transação com sucesso",
              "fullTitle": "POST - Realizada Autorização de Pagamento CT01 - Gerar transação com sucesso",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n  .post('/api/AutorizarPagamento')\n  .set('Authorization', `Bearer ${envVariables.token}`)\n  .send(RequestTransacao)\n  .end((err, res) => {\n    if (err) return done(err);\n    transactionId = res.body.transactionId\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.status).to.be.equal(3);\n    expect(res.body.message).to.be.equal('AUTHORIZED');\n    expect(res.body.processors.antifraud).to.be.equal(null);\n    expect(res.body).not.to.be.null;\n    //IdTransacaoSalvo\n    fs.writeFileSync('./Payloads/MassaTest/transactionIdGerado.json', transactionId);\n    //ResponseSalvao\n    fs.writeFile(\"ResponseSalvo.json\", JSON.stringify(res.body, null, 1), function (error) {\n      if (error) {\n        return console.err(error)\n      }\n    });\n  });\ndone();",
              "err": {},
              "uuid": "c9f96fed-0c8c-486b-b48f-adc9bbbe05c4",
              "parentUUID": "a93338f1-284e-4dcd-9a5a-5d23fb685e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT02 - Valida StatusCode 400 - 400Bad Request",
              "fullTitle": "POST - Realizada Autorização de Pagamento CT02 - Valida StatusCode 400 - 400Bad Request",
              "timedOut": false,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n  .post('/api/AutorizarPagamento')\n  .set('Authorization', `Bearer ${envVariables.token}`)\n  .send(BadRequest400)\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res.statusCode).to.be.equal(400);\n    return done();\n  });",
              "err": {},
              "uuid": "33a48260-de7b-4ab0-9506-092fbe1efaf5",
              "parentUUID": "a93338f1-284e-4dcd-9a5a-5d23fb685e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT03 - Transação não autorizada - StatusCode 401Unauthorized",
              "fullTitle": "POST - Realizada Autorização de Pagamento CT03 - Transação não autorizada - StatusCode 401Unauthorized",
              "timedOut": false,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n  .post('/api/AutorizarPagamento')\n  .set('Authorization', `Bearer`)\n  .send(RequestTransacao)\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res.statusCode).to.be.equal(401);\n    return done();\n  });",
              "err": {},
              "uuid": "1b5dc23a-7382-4b58-b083-273b129151ec",
              "parentUUID": "a93338f1-284e-4dcd-9a5a-5d23fb685e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT04 - Valida StatusCode 404 - Not Found",
              "fullTitle": "POST - Realizada Autorização de Pagamento CT04 - Valida StatusCode 404 - Not Found",
              "timedOut": false,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n  ///EndPoint errado\n  .post('/AutorizarPagamento')\n  .set('Authorization', `Bearer ${envVariables.token}`)\n  .send(RequestTransacao)\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res.statusCode).to.be.equal(404);\n    return done();\n  });",
              "err": {},
              "uuid": "c457f25a-0780-49d0-a6c5-44e8432f75cd",
              "parentUUID": "a93338f1-284e-4dcd-9a5a-5d23fb685e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT05 - Valida StatusCode 405 - Not Found",
              "fullTitle": "POST - Realizada Autorização de Pagamento CT05 - Valida StatusCode 405 - Not Found",
              "timedOut": false,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n  ///VERBO do EndPoint errado\n  .get('/api/AutorizarPagamento')\n  .set('Authorization', `Bearer ${envVariables.token}`)\n  .send(TransacaoJaRealizada)\n  .expect(405)\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res.statusCode).to.be.equal(405);\n    return done();\n  });",
              "err": {},
              "uuid": "93eb0af2-73e8-4823-9b2b-5494427d04a0",
              "parentUUID": "a93338f1-284e-4dcd-9a5a-5d23fb685e63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9f96fed-0c8c-486b-b48f-adc9bbbe05c4",
            "33a48260-de7b-4ab0-9506-092fbe1efaf5",
            "1b5dc23a-7382-4b58-b083-273b129151ec",
            "c457f25a-0780-49d0-a6c5-44e8432f75cd",
            "93eb0af2-73e8-4823-9b2b-5494427d04a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 453,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b627fef6-f541-4ec7-b7ae-d114da18f503",
          "title": "GET - Realiza consulta da Transação",
          "fullFile": "C:\\Users\\jose.ramalho\\Desktop\\SuperTest\\test\\03 - GetConsulta_AUTHORIZED.js",
          "file": "\\test\\03 - GetConsulta_AUTHORIZED.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar a consulta da transação - AUTHORIZED",
              "fullTitle": "GET - Realiza consulta da Transação Deve realizar a consulta da transação - AUTHORIZED",
              "timedOut": false,
              "duration": 2770,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n  .get('/api/ConsultarPagamento/' + IDdaTransacao)\n  .set('Authorization', `Bearer ${envVariables.token}`)      \n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res.statusCode).to.be.equal(200)\n    expect(res.body.status).to.be.equal(3)\n    expect(res.body.message).to.be.equal('AUTHORIZED')\n    expect(res.body).not.to.be.null\n    return done();\n        });",
              "err": {},
              "uuid": "e651db87-6d59-4740-80a7-db68a3917e75",
              "parentUUID": "b627fef6-f541-4ec7-b7ae-d114da18f503",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e651db87-6d59-4740-80a7-db68a3917e75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2770,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "83fa1449-32b9-4eb1-8588-5cea8cf5dd75",
          "title": "POST - Realiza Capturar de Transação realizada",
          "fullFile": "C:\\Users\\jose.ramalho\\Desktop\\SuperTest\\test\\04 - postCAPTURA.js",
          "file": "\\test\\04 - postCAPTURA.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar CapturarPagamento",
              "fullTitle": "POST - Realiza Capturar de Transação realizada Deve realizar CapturarPagamento",
              "timedOut": false,
              "duration": 2940,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n  .post(\"/api/CapturarPagamento\")\n  .set('Authorization', `Bearer ${envVariables.token}`)\n  .set(\"Accept\", \"application/json\")\n  .send({\n    transactionId: `${IDdaTransacao}`,\n  })\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.status).to.be.equal(8);\n    expect(res.body.message).to.be.equal(\"CAPTURED\");\n    expect(res.body).not.to.be.null;\n    return done();\n  });",
              "err": {},
              "uuid": "a61df1b6-7b00-4b5c-8d7d-f508788aca35",
              "parentUUID": "83fa1449-32b9-4eb1-8588-5cea8cf5dd75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida status 400Bad Request - IdTransacao Invalido ou não informado",
              "fullTitle": "POST - Realiza Capturar de Transação realizada Valida status 400Bad Request - IdTransacao Invalido ou não informado",
              "timedOut": false,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n  .post(\"/api/CapturarPagamento\")\n  .set('Authorization', `Bearer ${envVariables.token}`)\n  .set(\"Accept\", \"application/json\")\n  .send({\n    transactionId: \"\",\n  })\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res.statusCode).to.be.equal(400);\n    expect(res.body).not.to.be.null;\n    return done();\n  });",
              "err": {},
              "uuid": "22ae48fd-2d61-4c2d-8532-5fa12596adaf",
              "parentUUID": "83fa1449-32b9-4eb1-8588-5cea8cf5dd75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a61df1b6-7b00-4b5c-8d7d-f508788aca35",
            "22ae48fd-2d61-4c2d-8532-5fa12596adaf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3021,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7b01060c-6458-4edb-9500-ba729088f68b",
          "title": "GET - Realiza consulta da transação CAPTURADA",
          "fullFile": "C:\\Users\\jose.ramalho\\Desktop\\SuperTest\\test\\05 - GetConsulta_CAPTURA.js",
          "file": "\\test\\05 - GetConsulta_CAPTURA.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar a consulta da transação - CAPTURADA",
              "fullTitle": "GET - Realiza consulta da transação CAPTURADA Deve realizar a consulta da transação - CAPTURADA",
              "timedOut": false,
              "duration": 2563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n  .get('/api/ConsultarPagamento/' + IDdaTransacao)\n  .set('Authorization', `Bearer ${envVariables.token}`)\n\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res.statusCode).to.be.equal(200)\n    expect(res.body.status).to.be.equal(8)\n    expect(res.body.message).to.be.equal('CAPTURED')\n    expect(res.body).not.to.be.null\n    return done();\n  });",
              "err": {},
              "uuid": "5d74be57-f2a3-45fa-be7e-f4e5aea3e7b1",
              "parentUUID": "7b01060c-6458-4edb-9500-ba729088f68b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d74be57-f2a3-45fa-be7e-f4e5aea3e7b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2563,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e3ecb6b-7343-4ed1-a045-ac19ca6041da",
          "title": "POST - Realiza Cancelamento da transação",
          "fullFile": "C:\\Users\\jose.ramalho\\Desktop\\SuperTest\\test\\06 - postCANCELAMENTO.js",
          "file": "\\test\\06 - postCANCELAMENTO.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar o Cancelamento da transação",
              "fullTitle": "POST - Realiza Cancelamento da transação Deve realizar o Cancelamento da transação",
              "timedOut": false,
              "duration": 2594,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n  .post('/api/CancelarPagamento')\n  .set('Authorization', `Bearer ${envVariables.token}`)\n  .send(\n    {\n      \"transactionId\": `${IDdaTransacao}`,\n    })\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res.statusCode).to.be.equal(200)\n    expect(res.body.status).to.be.equal(6)\n    expect(res.body.message).to.be.equal('CANCELLED')\n    expect(res.body).not.to.be.null\n    return done();\n  });",
              "err": {},
              "uuid": "2115fed7-38cb-4102-a671-33a8510096af",
              "parentUUID": "2e3ecb6b-7343-4ed1-a045-ac19ca6041da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2115fed7-38cb-4102-a671-33a8510096af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2594,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ddfc29b-672c-4de9-99c0-ac6826dd2f60",
          "title": "GET- Realiza consulta da transação",
          "fullFile": "C:\\Users\\jose.ramalho\\Desktop\\SuperTest\\test\\07 - GetConsulta_CANCELAMENTO.js",
          "file": "\\test\\07 - GetConsulta_CANCELAMENTO.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar a consulta da transação - CANCELADA",
              "fullTitle": "GET- Realiza consulta da transação Deve realizar a consulta da transação - CANCELADA",
              "timedOut": false,
              "duration": 2033,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(`${envVariables.baseUrl}`)\n  .get('/api/ConsultarPagamento/' + IDdaTransacao)\n  .set('Authorization', `Bearer ${envVariables.token}`)\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res.statusCode).to.be.equal(200)\n    expect(res.body.status).to.be.equal(6)\n    expect(res.body.message).to.be.equal('CANCELLED')\n    expect(res.body).not.to.be.null\n    return done();\n  });",
              "err": {},
              "uuid": "55dd726d-86c1-4c5e-89f1-1af944351c03",
              "parentUUID": "0ddfc29b-672c-4de9-99c0-ac6826dd2f60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55dd726d-86c1-4c5e-89f1-1af944351c03"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2033,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "customReportDir",
        "reportName": "customReportName",
        "reportTitle": "customReportTitle",
        "inlineAssets": "true"
      },
      "version": "6.2.0"
    }
  }
}